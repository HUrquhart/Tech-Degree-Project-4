// **********************************************
// _grid.scss
// styles related to the grid system and
// main container.
// major grid styles have been added here for you
// but additional styling may be needed
// **********************************************


// grid base class
.grid {

  // .grid__row
  &__row {
    // padding: 1em 10px; // removed because a approach is invalid for mobile // look in container
    margin-bottom: 3em;

    // replaced with mixin
    @include flex($dir: column){
      @include breakpoint('md') {
        flex-direction: row;
      }
    }
   

    
  }

  // .grid__col
  &__col {

    // create grid columns dynamically
    // loop through each column size
    @for $i from 1 through 12 {
      &--#{$i} {
        // every column is centered accroding to the design // a p tag will reset this
        text-align: left; 

        // each columns gets a color based on width as long as it is using the theme__colors selector too
        &.theme__colors{
          background-color: map-get($column-colors, $i );
          color: $white;
          padding: 10px;
          border-radius: .5em;
        }

        @extend %col;
        @include breakpoint('md') {
          text-align: center;
          // base stlyes applied to all grid columns
          margin-top: 0;
          // make column width a percentage of the column number / total columns
          flex-basis: #{$i / 12 * 100 + "%"} ;
        }
      }
    }
  }
} 

// targets all elements with classes that begin with grid__col
[class^=grid__col] {
  // grid__col + grid__col, targets two sibling columns
  & + & {
    @include breakpoint('md'){
      // add grid gutter
      margin-left: 10px;
    }
  }
}

.container{
  max-width: $container-width;
  margin: 0 auto;
  padding: 0 1em;
  @include breakpoint('xs'){
    max-width: 100%;
  }
}
.centered{
  @include breakpoint ('md'){
    margin: 0 auto;
  }
}